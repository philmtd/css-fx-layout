@import "mixins";

/// Generates layout data attribute selectors
@mixin layout-attributes {
	*[data-layout^="row"] {
		@include flex-row-properties;

		&[data-layout~="reverse"] {
			@include row-reverse-properties;
		}
	}

	*[data-layout^="column"] {
		@include flex-column-properties;

		&[data-layout~="reverse"] {
			@include column-reverse-properties;
		}
	}

	*[data-layout~="wrap"] {
		@include wrap-properties;
	}
}

@mixin layout-attributes-for-media-sizes {
	// attributes for flex-layout media sizes
	@each $name, $_ in $flex-layout-media-queries {
		@include flex-layout-media($name) {
			*[data-layout-#{$name}^="row"] {
				@include flex-row-properties;

				&[data-layout-#{$name}~="reverse"] {
					@include row-reverse-properties;
				}
			}

			*[data-layout-#{$name}^="column"] {
				@include flex-column-properties;

				&[data-layout-#{$name}~="reverse"] {
					@include column-reverse-properties;
				}
			}

			*[data-layout-#{$name}~="wrap"] {
				@include wrap-properties;
			}
		}
	}
}

@function all-data-layout-selectors() {
	$breakpoints: get-breakpoint-names();
	$list: "[data-layout],";
	@each $name in $breakpoints {
		$list: $list + #{",[data-layout-" + $name + "]"}
	}
	@return $list
}